#!/bin/bash

declare -a secrets=("OAUTH_UID" "OAUTH_CLIENT_ID" "OAUTH_PASSWORD" "EDL_PASSWORD" "SHARED_SECRET_KEY" "COOKIE_SECRET" "DATABASE_URL" "NB_EDL_PASSWORD")
declare -a processed_vars=()

env_files=(
  "services/work-scheduler/env-defaults"
  "services/work-updater/env-defaults"
  "services/cron-service/env-defaults"
  "services/work-failer/env-defaults"
  "packages/util/env-defaults"
  "services/harmony/env-defaults"
  ".env"
)

env_save=$(export -p)
set -a

for file in "${env_files[@]}"; do
  if [ -f "$file" ]; then
    source "$file"
  else
    echo "File $file does not exist."
  fi
done

set +ax
eval "$env_save"

USER_AGENT="harmony/${RELEASE_VERSION} (${CLIENT_ID})"
SERVICES_YML=$(< config/services.yml)
# needed for k8s services running locally that access the dB
DATABASE_URL=${DATABASE_URL/localhost/postgres}

EDL_USERNAME="${EDL_USERNAME:-unset}"
EDL_PASSWORD="${EDL_PASSWORD:-unset}"

cat <<EOF > /tmp/config_map.yml
apiVersion: v1
kind: ConfigMap
metadata:
  name: harmony-env
data:
  STAGING_PATH: "${STAGING_PATH}"
  SERVICES_YML: $(echo -n "${SERVICES_YML}" | base64 | tr -d "\n")
EOF

for file in "${env_files[@]}"; do
  if [[ -f ${file} ]]; then
    while IFS='=' read -r name value ; do
      # Skip lines that are commented out
      [[ $name =~ ^\#.* ]] && continue
      # Remove leading and trailing whitespace from name
      name=$(echo -n "$name" | xargs)
      # Check if name is non-empty and not in secrets
      if [[ -n "${!name}" && ! " ${secrets[@]} " =~ " ${name} " ]]; then
        escaped_value="${!name}"
        escaped_value=$(echo "$escaped_value" | sed 's/"/\\\"/g')
        echo "  ${name}: \"${escaped_value}\"" >> /tmp/config_map.yml
      fi
    done < <(grep '=' "${file}" | awk -F= '{print $1}')
  fi
done

echo "  LOCALSTACK_HOST: \"${LOCALSTACK_K8S_HOST}\"" >> /tmp/config_map.yml

kubectl -n harmony apply -f /tmp/config_map.yml
rm /tmp/config_map.yml

cat <<EOF | kubectl -n harmony apply -f -
apiVersion: v1
kind: Secret
metadata:
  name: harmony-secrets
type: Opaque
data:
  OAUTH_CLIENT_ID: $(echo -n "${OAUTH_CLIENT_ID}" | base64)
  OAUTH_UID: $(echo -n "${OAUTH_UID}" | base64)
  OAUTH_PASSWORD: $(echo -n "${OAUTH_PASSWORD}" | base64)
  EDL_PASSWORD: $(echo -n "${EDL_PASSWORD:-unset}" | base64)
  SHARED_SECRET_KEY: $(echo -n "${SHARED_SECRET_KEY}" | base64)
  COOKIE_SECRET: $(echo -n "${COOKIE_SECRET}" | base64 | tr -d "\n")
  DATABASE_URL: $(echo -n "${DATABASE_URL}" | base64 | tr -d "\n")
EOF
