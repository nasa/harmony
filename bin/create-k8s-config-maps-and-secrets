#!/bin/bash

declare -a secrets=("OAUTH_UID" "OAUTH_CLIENT_ID" "OAUTH_PASSWORD" "SHARED_SECRET_KEY" "COOKIE_SECRET" "DATABASE_URL" "NB_EDL_PASSWORD")
declare -a applications=("work-scheduler" "work-updater" "cron-service" "work-failer" "harmony")

# Load the currently set environment variables
env_save=$(export -p)
set -a  # Automatically export sourced variables

# Load global defaults
if [ -f "packages/util/env-defaults" ]; then
  source "packages/util/env-defaults"
fi

for app in "${applications[@]}"; do
  config_map_file="/tmp/${app}-config-map.yml"
  config_map_name="${app}-env"

  echo "Generating ConfigMap for ${config_map_name}..."

  # Precedence in reverse order is package defaults, app specific env-defaults, .env, environment
  set -a
  app_env_defaults="services/${app}/env-defaults"
  if [ -f "$app_env_defaults" ]; then
    source "$app_env_defaults"
  fi

  if [ -f ".env" ]; then
    source ".env"
  fi

  eval "$env_save"
  set +a

  cat <<EOF > "$config_map_file"
apiVersion: v1
kind: ConfigMap
metadata:
  name: ${config_map_name}
data:
EOF

  # Harmony-specific variables
  if [[ "$app" == "harmony" ]]; then
    SERVICES_YML=$(< config/services.yml)
    echo "  STAGING_PATH: \"${STAGING_PATH}\"" >> "$config_map_file"
    echo "  SERVICES_YML: $(echo -n "${SERVICES_YML}" | base64 | tr -d "\n")" >> "$config_map_file"
  fi

  # Always set USER_AGENT for all apps
  echo "  USER_AGENT: \"harmony/${RELEASE_VERSION} (${CLIENT_ID})\"" >> "$config_map_file"

  # Find variables from .env, packages/util/env-defaults, and app-specific env-defaults
  all_env_files=(".env" "packages/util/env-defaults" "$app_env_defaults")

  for file in "${all_env_files[@]}"; do
    if [[ -f $file ]]; then
      while IFS='=' read -r name _; do
        [[ $name =~ ^\#.* ]] && continue  # Skip comments
        name=$(echo -n "$name" | xargs)   # Trim whitespace

        if [[ -n "${!name}" && ! " ${secrets[@]} " =~ " ${name} " ]]; then
          escaped_value=$(echo "${!name}" | sed 's/"/\\\"/g')
          echo "  ${name}: \"${escaped_value}\"" >> "$config_map_file"
        fi
      done < <(grep '=' "$file" | awk -F= '{print $1}')
    fi
  done

  echo "  LOCALSTACK_HOST: \"${LOCALSTACK_K8S_HOST}\"" >> "$config_map_file"

  kubectl -n harmony apply -f "$config_map_file"
  rm "$config_map_file"

  echo "ConfigMap ${config_map_name} created successfully."
done

# The secrets are defined in the main harmony service env-defaults
set -a
app_env_defaults="services/harmony/env-defaults"
if [ -f "$app_env_defaults" ]; then
  source "$app_env_defaults"
fi

if [ -f ".env" ]; then
  source ".env"
fi

eval "$env_save"
set +a

cat <<EOF | kubectl -n harmony apply -f -
apiVersion: v1
kind: Secret
metadata:
  name: harmony-secrets
type: Opaque
data:
  COOKIE_SECRET: $(echo -n "${COOKIE_SECRET}" | base64 | tr -d "\n")
  DATABASE_URL: $(echo -n "${DATABASE_URL/localhost/postgres}" | base64 | tr -d "\n")
  NB_EDL_PASSWORD: $(echo -n "${NB_EDL_PASSWORD}" | base64 | tr -d "\n")
  OAUTH_CLIENT_ID: $(echo -n "${OAUTH_CLIENT_ID}" | base64)
  OAUTH_PASSWORD: $(echo -n "${OAUTH_PASSWORD}" | base64)
  OAUTH_UID: $(echo -n "${OAUTH_UID}" | base64)
  SHARED_SECRET_KEY: $(echo -n "${SHARED_SECRET_KEY}" | base64)
EOF
